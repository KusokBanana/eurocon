<?php

namespace frontend\models;

use Yii;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "project".
 *
 * @property integer $id
 * @property string $name
 * @property string $date
 * @property string $image
 *
 * @property BookCompanyProject[] $bookCompanyProjects
 * @property BookUserProject[] $participants
 */
class Project extends ActiveRecord
{

    private static $image_path = '/upload/project/';
    private static $default_image_path = 'https://s-media-cache-ak0.pinimg.com/originals/05/12/21/05122101571dd2b6a0134aba4bdb3713.jpg';

    public static $limit = 12;


    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'project';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'date'], 'required'],
            [['date'], 'safe'],
            [['name'], 'string', 'max' => 126],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'date' => 'Date',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCompanyProjects()
    {
        return $this->hasMany(BookCompanyProject::className(), ['project_id' => 'id']);
    }

    public function getProjects()
    {
        return $this->hasMany(BookUserProject::className(), ['project_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getParticipants()
    {
        return $this->hasMany(Person::className(), ['id' => 'user_id'])
            ->via('projects');
    }

    public function getTags()
    {
        return $this->hasMany(Tag::className(), ['field_id' => 'id']);
    }

    public function getParticipantsData($page = 1)
    {

        $query = $this->getParticipants();
        return Pagination::getData($query, $page, Person::$limit, 'participants');

    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub

        $this->setImage();


    }

    private function setImage()
    {
        $image = $this->image;
        $path = Yii::getAlias('@frontend') . '/web' . self::$image_path;
        $isImageExist = file_exists($path . $image);
        if ($image && $isImageExist) {
            $this->image = Yii::getAlias('@web') . self::$image_path . $image;
        } else {
            $this->image = static::$default_image_path;
        }

    }

}
